<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Community">
	<select id="getBoardType" resultType="kh.final_project.dto.CategoryType">
		select * from board_type
	</select>

	<insert id="insertBoard">
		<selectKey keyProperty="board_name" resultType="String" order="BEFORE">
			select board_name from board_type where code = #{board_type}
		</selectKey>
		insert into ${board_name}_BOARDS values
		(${board_name}_BOARDS_SEQ.NEXTVAL, #{board_type}, #{title}, #{writer}, #{txt}, default, default)
	</insert>

	<select id="selectBoard" resultType="kh.final_project.dto.BoardsDTO">
		SELECT b.seq, b.board_type, b.title, m.nickname as writer, b.txt, b.write_date, b.total_count
		FROM ${name}_BOARDS b
		JOIN members m ON b.writer = m.code;
	</select>
	
	<select id="getNicknameByCode" resultType="String">
		select nickname from members where code = #{code}
	</select>
	
	<select id="selectBoardByPage" resultType="kh.final_project.dto.BoardsDTO">
		SELECT *
		FROM (
		  SELECT b.seq, b.board_type, b.title, m.nickname as writer, b.txt, b.write_date, b.total_count,
		         row_number() over (order by b.seq desc) as rn
		  FROM ${board_name}_BOARDS b
		  JOIN members m ON b.writer = m.code
		)
		WHERE rn BETWEEN #{startPost} AND #{endPost}
	</select>

	<update id="viewUp">
		update ${board_name}_BOARDS set total_count = total_count + 1 where seq = #{seq}
	</update>
	<select id="selectBoardView" resultType="kh.final_project.dto.BoardsDTO">
		SELECT b.seq, b.board_type, b.title, m.nickname as writer, b.txt, b.write_date, b.total_count
		FROM ${board_name}_BOARDS b
		JOIN members m ON b.writer = m.code
		WHERE b.seq = #{seq}
	</select>

	<update id="updateBoard">
		update ${board_name}_BOARDS set title = #{title}, txt = #{txt}, write_date = default where seq = #{seq}
	</update>

	<delete id="deleteBoard">
		delete from ${board_name}_BOARDS where seq = ${seq}
	</delete>

	<insert id="insertReply">
		<choose>
			<when test="parent_reply == null">
				insert into ${board_name}_REPLYS values
				(${board_name}_REPLYS_SEQ.NEXTVAL, #{reply_type}, #{parent_board}, null, #{writer}, #{txt}, default)
			</when>
			<otherwise>
				insert into ${board_name}_REPLYS values
				(${board_name}_REPLYS_SEQ.NEXTVAL, #{reply_type}, #{parent_board}, #{parent_reply}, #{writer}, #{txt}, default)
			</otherwise>
		</choose>
	</insert>

	<select id="selectReply" resultType="kh.final_project.dto.BoardsReplyDTO">
		SELECT r.seq, r.reply_type, r.parent_board, r.parent_reply, m.nickname as writer, r.txt, r.write_date
		FROM ${board_name}_REPLYS r
		JOIN members m ON r.writer = m.code
		WHERE r.reply_type = 1001
		ORDER BY r.write_date ASC
	</select>
	
	<select id="selectReReply" resultType="kh.final_project.dto.BoardsReplyDTO">
		SELECT r.seq, r.reply_type, r.parent_board, r.parent_reply, m.nickname as writer, r.txt, r.write_date
		FROM ${board_name}_REPLYS r
		JOIN members m ON r.writer = m.code
		WHERE r.reply_type = 1002
		ORDER BY r.write_date ASC
	</select>

	<delete id="deleteReply">
		delete from ${board_name}_REPLYS where seq = #{seq}
	</delete>

	<update id="updateReply">
		update ${board_name}_REPLYS set txt = #{txt}, write_date = default where seq = #{seq}
	</update>

	<select id="getMax" resultType="int">
		select count(*) from ${value}_BOARDS
	</select>
	
	<select id="selectBoardType" resultType="kh.final_project.dto.CategoryType">
		select code, name from board_type
	</select>
</mapper>