<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Gallery">
    <insert id="insertCard">
        insert into gallery_cards values(GALLERY_CARDS_SEQ.NEXTVAL, #{category_type},
        #{genre_type1, jdbcType=NUMERIC}, #{ai}, #{title}, #{writer}, #{catchphrase}, #{synopsis}, #{thumbnail_url},
        #{yn}, default, #{genre_type2, jdbcType=NUMERIC})
    </insert>
    <insert id="insertContent">
        insert into gallery_contents values(#{gallery_cards}, GALLERY_CONTENTS_SEQ.NEXTVAL, #{title},
        <choose>
            <when test="file_url != null">
                #{file_url}, null,
            </when>
            <when test="video_url != null">
                null, #{video_url},
            </when>
            <otherwise>
                null, null,
            </otherwise>
        </choose>
        #{txt}, #{yn}, default, default, default)
    </insert>

    <select id="selectAllCards" resultType="kh.final_project.dto.GalleryCardView">
        select * from (
        select view_gallery_cards.*, row_number() over(order by
        <choose>
            <when test="sortCode != null">
                ${sortKeyword} ${sortVal} nulls last
            </when>
            <otherwise>
                write_date desc nulls last
            </otherwise>
        </choose>
        ) rn from view_gallery_cards
        <trim prefix="where" prefixOverrides="and |or ">
            <if test="typeCode != null">
                category_type = #{typeCode}
            </if>
            <if test="searchQuery != null">
                <if test="searchCode != 1001">
                    and ${searchKeyword} like '%'||nvl(#{searchQuery, jdbcType=VARCHAR}, '')||'%'
                </if>
                and (title like '%'||nvl(#{searchQuery, jdbcType=VARCHAR}, '')||'%' or writer like '%'||nvl(#{searchQuery, jdbcType=VARCHAR}, '')||'%')
            </if>
            and yn = 'Y'
<!--            and (writer = #{writer, jdbcType=NUMERIC} or yn = 'Y')-->
        </trim>
        ) where rn between #{start} and #{end}
    </select>
    <select id="selectOneCard" resultType="kh.final_project.dto.GalleryCardView">
        select * from view_gallery_cards where seq = #{cardSeq}
    </select>
<!--    <select id="selectAllContents" resultType="kh.final_project.dto.GalleryContent">-->
<!--        select * from gallery_contents where gallery_cards = ${cardSeq} order by seq desc-->
<!--    </select>-->

    <select id="selectAllContents" resultType="kh.final_project.dto.GalleryContent">
        select *
        from (select gallery_contents.*, row_number() over(order by write_date desc nulls last) rn from gallery_contents where gallery_cards = ${cardSeq} and yn = 'Y')
        where rn between #{start} and #{end}
    </select>

    <select id="selectOneContent" resultType="kh.final_project.dto.GalleryContent">
        select gallery_contents.*, gallery_cards.category_type, gallery_cards.writer
        from gallery_contents
        left outer join gallery_cards on gallery_contents.gallery_cards = gallery_cards.seq
        where gallery_contents.gallery_cards = ${cardSeq} and gallery_contents.seq = ${contentSeq}
    </select>

    <update id="updateViewCount">
        update gallery_contents set total_count = total_count + 1, day_count = day_count + 1 where seq = ${contentSeq}
    </update>

    <update id="updateCard">
        update gallery_cards set
        <choose>
            <when test="genre_type1 != null">
                genre_type1 = ${genre_type1},
            </when>
            <otherwise>
                genre_type1 = null,
            </otherwise>
        </choose>
        <choose>
            <when test="genre_type2 != null">
                genre_type2 = ${genre_type2},
            </when>
            <otherwise>
                genre_type2 = null,
            </otherwise>
        </choose>
        ai = #{ai}, title = #{title}, catchphrase = #{catchphrase}, synopsis = #{synopsis}, thumbnail_url = #{thumbnail_url}, yn = #{yn} where seq = ${seq}
    </update>
    <update id="updateContent">
        update gallery_contents set title = #{title},
        <choose>
            <when test="file_url != null">
                file_url = #{file_url},
            </when>
            <when test="video_url != null">
                video_url = #{video_url},
            </when>
            <otherwise>
            </otherwise>
        </choose>
        txt = #{txt}, yn = #{yn} where seq = ${seq} and gallery_cards = ${gallery_cards}
    </update>
    <update id="updateDisclosure">
        update gallery_cards set yn = #{value} where seq = #{cardSeq}
    </update>

    <delete id="deleteCard">
        delete from gallery_cards where seq = #{cardSeq}
    </delete>
    <delete id="deleteContent">
        delete from gallery_contents where seq = ${contentSeq} and gallery_cards = ${cardSeq}
    </delete>

    <!--페이징-->
    <select id="totalCards" resultType="java.lang.Integer">
        select count(*) from view_gallery_cards
        <trim prefix="where" prefixOverrides="and |or ">
            <if test="typeCode != null">
                category_type = ${typeCode}
            </if>
            <if test="searchQuery != null">
                <if test="searchCode != 1001">
                    and ${searchKeyword} like '%'||#{searchQuery}||'%'
                </if>
                and (title like '%'||#{searchQuery}||'%' or writer like '%'||#{searchQuery}||'%')
            </if>
        </trim>
    </select>

    <select id="totalContents" resultType="java.lang.Integer">
        select count(*) from gallery_contents where gallery_cards = ${cardSeq}
    </select>

</mapper>